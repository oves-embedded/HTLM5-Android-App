name: OV APK CI/CD for Building and Releasing Artifacts to S3 and Packages

on:
  push:
    branches: [ master ]
    tags: [ "v*" ] # Trigger only on version tags

jobs:
  build:
    name: 🔨 Build Gradle Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Required for tags

      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"
          cache: 'gradle' # Enable Gradle caching

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace

  lint-check:
    name: 🔍 Linting
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"
          cache: 'gradle'

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Lint Check
        run: ./gradlew lint

      - name: Generate Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html
          retention-days: 14

  generate-release-apk:
    name: ⚙ Generate Release APK
    needs: [ build, lint-check ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"
          cache: 'gradle'

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: OVES-App
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 14

  create-release:
    name: 🎉 Create Release
    needs: [ generate-release-apk ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Extract Version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: OVES-App
          path: apk

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          files: apk/app-release-unsigned.apk
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp apk/app-release-unsigned.apk s3://${{ secrets.AWS_S3_BUCKET }}/releases/${{ steps.version.outputs.VERSION }}/app-release.apk --acl public-read
